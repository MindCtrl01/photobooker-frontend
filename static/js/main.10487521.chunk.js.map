{"version":3,"sources":["layouts/header/header.js","layouts/sidebar/sidebar.js","pages/homepage/homepage.js","router/index.js","layouts/body/body.js","layouts/footer/footer.js","App.js","reportWebVitals.js","reducers/userReducer.js","index.js"],"names":["Header","Sidebar","HomePage","routes","path","component","useState","count","setCount","onClick","Body","console","log","map","route","i","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","USER","username","role","avatar","userReducer","state","action","type","REHYDRATE","persistConfig","key","storage","pReducer","persistReducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"2LAUeA,MARf,WACE,OACE,8BACE,+CCKSC,MARf,WACE,OACE,8BACE,gD,uBCWSC,ICTAC,EANA,CACX,CACIC,KAAM,IACNC,UDFR,WAAoB,MAEQC,mBAAS,GAFjB,mBAEXC,EAFW,KAEJC,EAFI,KAIlB,OACE,gCACE,6CAAgBD,EAAhB,YACA,wBAAQE,QAAS,kBAAMD,EAASD,EAAQ,IAAxC,4BEWSG,MAff,WAEE,OADAC,QAAQC,IAAIT,GAER,cAAC,IAAD,UACE,cAAC,IAAD,UAEIA,EAAOU,KAAI,SAACC,EAAOC,GAAR,OACT,cAAC,IAAD,CAAeX,KAAMU,EAAMV,KAAMC,UAAWS,EAAMT,WAAtCU,WCFXC,MARf,WACE,OACE,8BACE,+CCYSC,MAXf,WACE,OACE,eAAC,WAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCASC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,+BCLRQ,EAAO,CACTC,SAAU,GACVC,KAAM,GACNC,OAAQ,IAmBGC,EAhBK,WAA2B,IAA1BC,EAAyB,uDAAjBL,EAAMM,EAAW,uCAC1C,OAAQA,EAAOC,MAIX,KAAKC,IACD,OAAO,2BACAH,GADP,IAEIJ,SAAUI,EAAMJ,SAChBC,KAAMG,EAAMH,KACZC,OAAQE,EAAMF,SAEtB,QACI,OAAOE,I,yBCRbI,EAAgB,CACpBC,IAAK,WACLC,QAASA,KAGLC,EAAWC,YAAeJ,EAAeL,GAC3CU,EAAQC,YACVH,EACAI,OAAOC,8BAAgCD,OAAOC,gCAC5CC,EAAYC,YAAaL,GAE7BM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAQA,EAAlB,SACA,cAAC,IAAD,CAAaS,QAAS,KAAML,UAAWA,EAAvC,SAEE,cAAC,EAAD,UAIJM,SAASC,eAAe,SAM1BlC,M","file":"static/js/main.10487521.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div>\r\n      <p>Header Here</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\r\n\r\nfunction Sidebar() {\r\n  return (\r\n    <div>\r\n      <p>Sidebar Here</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import React, { useState } from 'react';\r\n\r\nfunction HomePage() {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Click me\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HomePage;","import HomePage from \"../pages/homepage/homepage\";\r\nconst routes = [\r\n    {\r\n        path: \"/\",\r\n        component: HomePage\r\n    },\r\n];\r\nexport default routes","import React, { Suspense } from 'react'\r\nimport { Route, Switch } from 'react-router'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport routes from '../../router/index'\r\n\r\nfunction Body() {\r\n  console.log(routes)\r\n  return (\r\n      <Router>\r\n        <Switch>\r\n          {\r\n            routes.map((route, i) => (\r\n              <Route key={i} path={route.path} component={route.component} />\r\n            ))\r\n          }\r\n        </Switch>\r\n      </Router>\r\n  )\r\n}\r\n\r\nexport default Body\r\n","import React, { useState } from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div>\r\n      <p>Footer Here</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import Header from './layouts/header/header'\r\nimport Sidebar from './layouts/sidebar/sidebar'\r\nimport Body from './layouts/body/body'\r\nimport Footer from './layouts/footer/footer'\r\nimport { Fragment } from 'react'\r\n\r\nfunction App() {\r\n  return (\r\n    <Fragment>\r\n      <Header></Header>\r\n      <Sidebar></Sidebar>\r\n      <Body></Body>\r\n      <Footer></Footer>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { REHYDRATE } from 'redux-persist';\r\n\r\nconst USER = {\r\n    username: \"\",\r\n    role: \"\",\r\n    avatar: \"\",\r\n};\r\n\r\nconst userReducer = (state = USER, action) => {\r\n    switch (action.type) {\r\n        // case \"UPDATE_USERNAME\":\r\n        //     console.log(action)\r\n        //     return { ...state, username: action.username, token: action.token, role: action.role, avatar: action.avatar };\r\n        case REHYDRATE:\r\n            return {\r\n                ...state,\r\n                username: state.username,\r\n                role: state.role,\r\n                avatar: state.avatar\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default userReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createStore} from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport userReducer from \"./reducers/userReducer\";\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\n//config redux persist\r\nconst persistConfig = {\r\n  key: 'userInfo',\r\n  storage: storage,\r\n  //whitelist: ['authType'] // which reducer want to store\r\n};\r\nconst pReducer = persistReducer(persistConfig, userReducer);\r\nlet store = createStore(\r\n  pReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nlet persistor = persistStore(store)\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store ={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      {/* template */}\r\n      <App />\r\n      </PersistGate> \r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}